'\" t
.\" $Revision: 1.21 $
.ds ]W Sun Microsystems
'\" !tbl | mmdoc
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.na
.nh
.TH tapealert 8 "07 Jan 2009"
.SH NAME
tapealert \- Decodes TapeAlert events
.SH SYNOPSIS
\fBtapealert\fR
\%\fB\-i\fR
\%\fB\-f /var/opt/SUNWsamfs/devlog/\fInn\fR
.SH AVAILABILITY
\fBSUNWsamfs\fR
.SH DESCRIPTION
The TapeAlert feature displays diagnostic and status messages for
tape drives and automated library devices.
These messages can provide network administrators with
critical diagnostic information, such as for media or drive failure,
when user intervention is urgent and data is at risk.
TapeAlert messages also warn you when media or devices need servicing,
and the messages also provide information regarding media or device status.
.PP
The TapeAlert feature enables a tape drive or automated library to convey
diagnostic information to network administrators.  TapeAlerts interpret
log sense page 0x2e.  The log sense page contains
64 \%industry-standard error flags.
Robots and tape 
drives support TapeAlert though their own set of specific error flags.
.PP
The Sun StorEdge SAM software automatically writes TapeAlert events
to the device log file, \fB/var/opt/SUNWsamfs/devlog/\fInn\fR.
TapeAlert events are logged in many situations, for example
positioning errors, drive \%self-test errors, and others.
If a TapeAlert event is logged, user action is often required.
.PP
The \fBtapealert\fR command reads the events logged in the device
log file, interprets them, and writes them to a text file for
easier viewing. The TapeAlert events can be used to diagnose hardware and
media problems for a particular tape volume.
In addition, you can enable \%real-time TapeAlert output to be sent
to you in the form of an email or pager message.
.PP
Only unique, discrete, nonzero TapeAlert events are written to the 
device log (\fBdevlog/\fInn\fR).
If repeated identical TapeAlert events are detected,
only one is written to the device log.  This keeps the device log
manageable, accurate, and comprehensive without becoming unwieldy.
If a TapeAlert event occurs when a drive is empty,
no VSN is recorded in the device log or sent with
the \fBsysevent\fR.
For more information on the device log file and the information
written to it, see the \fBdevlog\fR(5) man page.
.PP
TapeAlert writes \%device-specific messages to \%device-specific files.
For each device, whether it is an automated library or a
tape drive, TapeAlert writes messages specific to that device in
the device's own file.  Messages are logged as follows:
.TP 3
\(bu
For automated libraries, TapeAlerts are accessed at the following events:
Sun StorEdge SAM device identification, move media, door lock, door unlock, 
position element, exchange, and after unrecoverable device errors.
.TP
\(bu
For tape drives, TapeAlerts are accessed at the following events:
Sun StorEdge SAM device identification,
load, unload, and after unrecoverable device errors.
.PP
The \fBtapealert\fR command is not supported for magneto optical
or \%mixed-media libraries.  TapeAlert is supported
on \%direct-attached hosts only.  TapeAlert is not supported on
network-attached hosts.
.SH OPTIONS
The \fBtapealert\fR command requires you to specify one of the
following options:
.TP 10
\%\fB\-f /var/opt/SUNWsamfs/devlog/\fInn\fR
Specifies the file to be read and interpreted.
For \fInn\fR, enter the Equipment Number of the device.
The Equipment Number is the second field in the Sun StorEdge QFS
master configuration file (\fB/etc/opt/SUNWsamfs/mcf\fR).
Each device has its own unique \fBdevlog/\fInn\fR file.
The system writes each device's TapeAlert events
to its own unique file.
.sp
For more information on \fBmcf\fR files, see
the \fBmcf\fR(5) man page.
.TP 10
\%\fB\-i\fR
Reads standard input for interpretation.
.PP
For an example of \fBtapealert\fR command output,
see the EXAMPLES section of this man page.
.SH USAGE
You can create a TapeAlert \fBsysevent\fR event handler
to record all, or only some, automated library and tape drive
TapeAlert flags in
real time in a single place.
The following sections describe the TapeAlert name-value pairs
that are needed to build an event handler and describe how to
create various types of event handlers.
.SS "TapeAlert Sysevent Class and \%Name-Value Pairs"
To create a custom TapeAlert \fBsysevent\fR event handler,
the following information is required:
.TP 10
\fBField\fR
\fBValue\fR
.TP
Class
\fBDevice\fR
.TP
Subclass
\fBTapeAlert\fR
.TP
Vendor
\fBSUNW\fR
.TP
Publisher
\fBSUNWsamfs\fR
.PP
In addition, you can include all or some of the following
TapeAlert \fBsysevent\fR \%name-value pairs:
.TP 20
\fBName\fR
\fBValue and Data Type\fR
.TP
\fBVENDOR\fR
Inquiry vendor.  Data type is \fBstring\fR.
.TP
\fBPRODUCT\fR
Inquiry product.  Data type is \fBstring\fR.
.TP
\fBREV\fR
Inquiry revision.  Data type is \fBstring\fR.
.TP
\fBUSN\fR
Inquiry unit serial number.  Data type is \fBstring\fR.
.TP
\fBTOD\fR
Time of day.  Data type is \fBint32\fR.
.TP
\fBSET\fR
\fBmcf\fR file Family Set.  Data type is \fBstring\fR.
.TP
\fBFSEQ\fR
\fBmcf\fR file Family Set Equipment Number.  Data type is \fBint16\fR.
.TP
\fBEQ_ORD\fR
\fBmcf\fR file Equipment Number.  Data type is \fBint16\fR.
.TP
\fBNAME\fR
Device name.  Data type is \fBstring\fR.
.TP
\fBVERSION\fR
Inquiry version.  Data type is \fBbyte\fR.
.TP
\fBINQ_TYPE\fR
Inquiry peripheral device type.  Data type is \fBbyte\fR.
.TP
\fBVSN\fR
Volume serial name.  Data type is \fBstring\fR.
.TP
\fBFLAGS_LEN\fR
TapeAlert flags number.  Data type is \fBint16\fR.
.TP
\fBFLAGS\fR
TapeAlert flags \%64-1.  Data type is \fBuint64\fR.
.SS Creating the Event Handler
Creating the event handler is a \%two-procedure process.
In the first procedure,
you create the event handler itself.  In the second procedure,
you create a notification mechanism.
.PP
The following procedure describes how to create the event handler.
.TP 3
1.
Log in as root.
.TP
2.
Create the notification system.
.sp
After the event handler is created, you need to create a
notification system.  This can be done through your own \%user-created
script or through a C program event handler.
The following procedures describe how to create a C program event
handler and how to establish email notification.
.sp
\fBTo Create a C Program Notifier:\fR
.sp
The following C program, \fB/var/tmp/event_handler.c\fR, writes
TapeAlert events to a temporary file:
.sp
.nf
.ft CO
#include <stdio.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>

int main(int argc, char **argv)
{
        char *vendor, *product, *revision, *name, *vsn;
        time_t tod;
        char *todstr;
        short eq_num;
        uchar_t inq_type;
        int flags_len;
        uint64_t flags;
        FILE *fp;

        vendor = argv[1];
        product = argv [2];
        revision = argv[3];
        tod = (time_t)strtol(argv[4], NULL, 10);
        todstr = asctime(localtime (&tod));
        *(strchr (todstr, '\en')) = '\e0';
        eq_num = atoi(argv[5]);
        name = argv[6];
        inq_type = (uchar_t)strtol(argv[7], NULL, 16);
        vsn = argv[8];
        flags_len = atoi(argv[9]);
        flags = (uint64_t)strtoll(argv[10], NULL, 16);

        if ((fp = fopen ("/var/tmp/tapealert", "a+")) == NULL)
                return 1;
        fprintf (fp, "%s %-8s %-16s %-4s VSN %s\en", todstr, vendor,
                 product, revision, vsn);
        fprintf (fp, "Eq num. %d Dev name %s\en", eq_num, name);
        fprintf (fp, "TapeAlert %d flags %016llx\en", flags_len, flags);
        fprintf (fp, "\en");
        fclose (fp);
        return 0;
}
.fi
.ft
.sp
\fRAfter this file is created, you must compile it.
After compilation, you can run the following commands
to load the event handler into the \fBsysevent\fR daemon:
.RE
.PP
.ft CO
.nf
# syseventadm add -c Device -s TapeAlert -v SUNW -p SUNWsamfs
/var/tmp/event_handler \e"\e$VENDOR\e" \e"\e$PRODUCT\e" \e"\e$REV\e" \e$TOD 
\e$EQ_ORD \e"\e$NAME\e" \e$INQ_TYPE \e"\e$VSN\e" \e$FLAGS_LEN \e$FLAGS
.RE
.PP
.ft CO
.nf
# syseventadm restart
.fi
.ft
.RS 3
.PP
The following commands show the critical clean drive TapeAlert flag 20 
active for drive 81 and 82:
.RE
.PP
.ft CO
.nf
# tail -f /var/tmp/tapealert
Mon Jun 16 10:42:45 2003 "EXABYTE " "EXB-89008E030203" "V39e" VSN "000166"
Eq num. 81 Dev name "/dev/rmt/1cbn"
TapeAlert 49 flags 0000000000080000

Mon Jun 16 10:42:51 2003 "EXABYTE " "EXB-89008E030203" "V39e" VSN "000165"
Eq num. 82 Dev name "/dev/rmt/0cbn"
TapeAlert 49 flags 0000000000080000
.fi
.ft
.RS 3
.PP
\fBTo Create an Email Notifier:\fR
.PP
The following procedure describes how to enable email notification.
.TP 3
1.
Log in as root.
.TP 3
\fR2.
In the script file \fB/var/tmp/email_pager\fR,
send yourself or your pager a TapeAlert email by adding a line
similar to the following:
.sp
.nf
.ft CO
echo $2 | /usr/ucb/mail -s "TapeAlert $1" admin@support.com
.fi
.ft
.TP 3
\fR3.
Run commands to load the event handler in the \fBsysevent\fR daemon.
.sp
Issue the \fBsyseventadm\fR(8) commands, as follows:
.sp
.ft CO
.nf
# syseventadm add -c Device -s TapeAlert -v SUNW -p SUNWsamfs
/var/tmp/email_pager $EQ_ORD "$VSN" 
.sp
.ft CO
.nf
# syseventadm restart
.fi
.ft
.RE
'\" .SH ATTRIBUTES
'\" .LP
'\" See 
'\" .BR attributes (5) 
'\" for descriptions of the following attributes:
'\" .TS
'\" box;
'\" cbp-1 | cbp-1
'\" l | l .
'\" ATTRIBUTE TYPE	ATTRIBUTE VALUE
'\" =
'\" Availability	\f(CWSUNWsamfs\f1
'\" .TE
'\" .sp
'\"
.SH EXAMPLES
Example 1.  The following \fBmcf\fR file defines one automated library
and two tape drives: 
.PP
.nf
.ft CO
# OVERLAND NEO Series
/dev/samst/c2t6u0    80    rb   NEO_Series on   
/var/opt/SUNWsamfs/catalog/NEO_Series
/dev/rmt/0cbn        81    tp   NEO_Series on
/dev/rmt/1cbn        82    tp   NEO_Series on

historian            90    hy   -        -    
/var/opt/SUNWsamfs/catalog/historian
.ft
.fi
.PP
You could decode the TapeAlert flags for these devices
using the following \fBtapealert\fR commands:
.PP
.nf
.ft CO
# tapealert -f /var/opt/SUNWsam/devlog/80
# tapealert -f /var/opt/SUNWsam/devlog/81
# tapealert -f /var/opt/SUNWsam/devlog/82
.ft
.fi
.PP
Example 2.  The following examples show \fBtapealert\fR command
output:
.PP
.ft CO
.nf
# tapealert -f /var/opt/SUNWsamfs/devlog/91
2003/11/18 15:05:20 Eq no. 91 Seq no. 7
Code: 0x27
Flag: Diagnostics required
Severity: Warning
Application message:
The tape drive may have a hardware fault. Run extended diagnostics
to verity and diagnose the problem. Check the tape drive users
manual for device specific instructions on running extended
diagnostics tests.
Probable cause:
The drive may have a hardware fault that may be identified by
extended diagnostics (i.e. SEND DIAGNOSTIC command).

Code: 0x32
Flag: Lost statistics
Severity: Warning
Application message:
Media statistics have been lost at some time in the past.
Probable cause:
Drive or library powered down with tape loaded.
.fi
.ft
.PP
.SH FILES
\fB/etc/sysevent/config/SUNW,sysevent.conf\fR
.PP
\fB/var/opt/SUNWsamfs/devlog/\fInn\fR
.SH SEE ALSO
\fBsamd\fR(8),
\fBsyseventadm\fR(8).
.PP
\fBdevlog\fR(5),
\fBmcf\fR(5),
\fBsefsysevent\fR(5).
.SH NOTES
The T10 Technical Committee is responsible for SCSI architecture
standards.  This \fBtapealert\fR command supports the TapeAlert
functionality as defined by T10 in the following papers:
.TP 3
\(bu
\fISCSI Stream Commands \- 2 (SSC\-2)\fR.  For a copy of this
paper, see \fBwww.t10.org/ftp/t10/drafts/ssc2/ssc2r08g.pdf\fR.
.TP
\(bu
\fISCSI Media Changer Commands \- 2 (SMC\-2)\fR.  For a copy of this
paper, see \fBwww.t10.org/ftp/t10/drafts/smc2/smc2r05b.pdf\fR.
.PP
The preceding URLs are supported as of June 2003.  If you have difficulty
accessing these papers, consult the main T10 Technical Committee
webpage at \fBwww.t10.org\fR.
.PP
Portions of this man page were based on or derived from the following
T10 Technical Committe publications:
.TP 3
1.
\fISCSI Stream Commands \- 2 (SSC-2)\fR, Revision 08d,
9 September 2002.
.TP 3
2.
\fISCSI-3 Media Changer Commands \- 2 (SMC-2)\fR,
Revision 5, July 12, 2002.
.PP
TapeAlert is limited to direct attached SCSI automated libraries and tape
drives that support Log Sense Page 0x2e.
.PP
Sun is not responsible for the availability of
\%third-party Web sites mentioned in this document.
Sun does not endorse and is not responsible or
liable for any content, advertising,
products, or other materials that are available
on or through such sites or resources.
Sun will not be reponsible for any actual or
alleged damage or loss caused by
or in connection with the use of or reliance
on any such content, goods, or services that are
available on or through such sites or resources.

