.\" $Revision: 1.19 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_archive 3 "03 Feb 2002"
.SH NAME
sam_archive \- Sets archive attributes on a file or directory
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_archive(const char *" "path" ,
.BI "const char *" "ops" );
.SH DESCRIPTION
.PP
.B sam_archive(\|)
sets archive attributes on a file or directory using a Sun
StorEdge \%SAM-FS or Sun \%SAM-QFS system call.
.I path
is the file on which to set the attributes.
.I ops
is the character string of options, for example:  "dn".  Individual options are
described below.
.SH OPTIONS
.TP
.B C
Specifies concurrent archiving for this file. This file can be 
archived even if opened for write. The archive time is regulated
by the modification time. Note, nfs files are not opened and
are by default concurrently archived. Concurrent archiving is
useful for databases, however caution is advised since 
archiving can occur while the file is being modified and this
can result in wasted media. The default is to disallow
archiving while the file is opened for write.
.TP
.B I
Support inconsistent archive copies. This means that an archive copy
can be created even if the file is modified while it is being copied
to the media. 
By default, the archive copy is disallowed if the file is inconsistent,
that is, if the file is modified while it was being copied to the media.
Note, the file cannot be staged if the copy is marked
inconsistent; however, after a samfsrestore, the inconsistent flag is removed
from the archive copy and the file can be staged.
.sp
Inconsistent archiving is useful for databases, however caution
is advised because it a file can be staged from an inconsistent copy
after the file is restored using samfsrestore.
.TP
.B d
Return the archive attributes on the file to the default, i.e. archive the
file according to the archiver rules.
When this option is specified, the attributes are reset to the default.
If it is used, it should be the first character in the string.
.TP
.B i
Specifies that the file be immediately archived if it is not already archived.
.TP
.B w
Wait for the file to have at least 1 archive copy before completing.
Not valid with \fId\fP or \fIn\fP.
.sp
Note that it may take a long time for the file to be archived.
.TP
.B W
Wait for the file to have all its required archive copies before completing.
Not valid with \fId\fP or \fIn\fP.
.sp
Note that it may take a long time for the file to be archived.
.TP
.B n
Specifies that this file never be archived.  Not valid with either of the
checksum \fIg\fP (\fIgenerate\fP) or \fIu\fP (\fIuse\fP) attributes.
(See
.BR ssum (1)
or
.BR sam_ssum (3)).
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_archive(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
.I path
or
.I ops
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_archive(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.SH "SEE ALSO"
.BR archive (1),
.BR ssum (1),
.BR sam_ssum (3)
