.\" $Revision: 1.4 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.\"
.TH sam_exarchive 3 "15 May 2007"
.SH NAME
sam_exarchive \- Exchanges archive copies of a file or directory
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_exarchive(const char *" "path" ,
.BI "int"  " num_opts" ,
.B "...");
.SH DESCRIPTION
.PP
.B sam_exarchive(\|)
lets you exchange archive copies of a
file or a directory using a Sun
StorageTek \%SAM-FS or Sun \%SAM-QFS system call.
.I path
is the file whose specified archive copies are to be exchanged,
followed by a sequence of
.I num_opts
input characters or options.
Individual options are described below.
.SH OPTIONS
.TP
\%\fBc\ \fIcopy_m\fR
.TP
\%\fBc\ \fIcopy_n\fR
Specifies the copies to be exchanged.
The \fIcopy_m\fR is exchanged with \fIcopy_n\fR.
Exactly two \f|'c'\fR options must be specified.
The first copy (\fIcopy_m\fR) must have a valid archive entry.
.TP
\fBM\fR
Exarchives metadata only.
This includes directories, the segment index,
and removable media files.
Regular files are not exarchived.
If you are exarchiving a directory, you must specify
the \%\fB"M\fR" option.
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_exarchive(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
Argument points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_exarchive(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.SH "SEE ALSO"
.BR exarchive(1m),
.BR mcf(5)
