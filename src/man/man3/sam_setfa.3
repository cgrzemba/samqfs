.\" $Revision: 1.22 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_setfa 3 "16 Mar 2005"
.SH NAME
sam_setfa \- Sets attributes on a file or directory
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_setfa(const char *" "path" ,
.BI "const char *" "ops" );
.SH DESCRIPTION
.B sam_setfa(\|)
sets attributes on a file or directory using a \%SAM-QFS system call.
.I path
is the file on which to set the attributes.
.I ops
is the character string of options, for example:  "ds1".  Individual options are
described below.
.SH OPTIONS
.TP
.B A n
Specifies the number of bytes to be allocated ahead of a write to the file.
The \fIn\fR must be an integer
and must be greater than or equal to one kilobyte and less than 4 terabytes.
The \fIn\fR is rounded down to units of kilobytes.
This option is only valid for a regular file.
This option should be
used when writing large files where more sequential allocation is
desired.
Note, when the file is closed the blocks are reset to the
size of the file.
.TP
.B B
Specifies the direct I/O attribute be permanently cleared for this file.
This means data is transferred indirectly between the user's buffer and disk
through the system's page cache.
The default I/O mode is buffered (uses the page cache).
The \fBdirectio\fR attribute is persistent,
remaining until specifically cleared or reset.
See \fBdirectio\fR(3C) for Solaris 2.6 and above for more details.
.TP
.B d
Return the file attributes on the file to the default,
i.e. the stripe is reset to the mount default.
When this option is specified, the attributes are reset to the default.
If it is used, it should be the first character in the string.
.TP
.B D
Specifies the direct I/O attribute be permanently set for this file.
This means data is transferred directly between the user's buffer and disk.
This attribute should only be set for large block aligned sequential I/O.
The default I/O mode is buffered (uses the page cache).
Direct I/O will not be used if the file is currently memory mapped.
The \fBdirectio\fR attribute is persistent,
remaining until specifically cleared or reset.
See \fBdirectio\fR(3C) for Solaris 2.6 and above for more details.
.TP
.B g n
Specifies the number of the striped group where the file is to be
preallocated.
\fIn\fP is a number 0 .. 127.
\fIn\fP must be a striped_group defined in the file system.
.TP
.B l n
Specifies the number of bytes to be preallocated to the file.
The \fIn\fR must be an integer.
This option can only be applied to a regular file.
If an I/O event attempts to extend a file preallocated with the
\fBL\fP option, the caller receives an \fBENXIO\fR error.
The \fBl\fP option allocates using extent allocation.
This means striping is not supported and the file is allocated
on 1 disk device or 1 striped group.
The \fBL\fP and \fBl\fP options are mutually exclusive.
If the file has existing disk blocks, this option is changed to the
\fBL\fP option.
.TP
.B L n
Specifies the number of bytes to be preallocated to the file.
The \fIn\fR must be an integer.
This option is only valid for a regular file.
The \fBL\fP option allocates using standard allocation.
This means striping is supported.
This also means the file can be extended.
The \fBL\fP and \fBl\fP options are mutually exclusive.
.TP
.B q
Specifies that this file will be linked to the pseudo character device
driver, samaio, for the purpose of issuing asynchronous I/O.
Note, this option also sets Direct I/O and qwrite.
Setting this option may result in greater performance.
.TP
.B s n
Specifies the number of allocation units to be allocated
before changing to the next unit.
If \fIn\fP is 1, this means the file will stripe across all units
with 1 disk allocation unit (DAU) allocated per unit.
If  \fIn\fP is 0, this means the file will be allocated on one
unit until that unit has no space.
The default stripe is specified at mount.
(see \fBmount_samfs\fR(8)).
Note, \fBEINVAL\fR is returned if the user sets stripe > 0 and mismatched
stripe groups exist.
Mismatched stripe groups means all striped groups
do not have the same number of partitions.
Striping across mismatched stripe groups is not allowed.
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_setfa(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
.I path
or
.I ops
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_setfa(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB EMULTIHOP
Components of \f2path\f1 require hopping to multiple
remote machines
and the file system does not allow it.
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.SH "SEE ALSO"
.BR setfa (1),
.BR ssum (1).
.PP
.BR mount_samfs (8).
.PP
.BR sam_advise (3),
.BR sam_ssum (3).
.PP
.BR directio (3C).
