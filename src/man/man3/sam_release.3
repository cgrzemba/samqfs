.\" $Revision: 1.20 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_release 3 "01 Oct 2004"
.SH NAME
sam_release \- Sets release attributes on a file or directory
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_release(const char *" "path" ,
.BI "const char *" "ops" );
.SH DESCRIPTION
.B sam_release(\|)
sets release attributes on a file or directory using a
Sun StorEdge \%SAM-FS or Sun \%SAM-QFS system call.
.I path
is the file on which to set the attributes.
.I ops
is the character string of options, for example:  "dn".  Individual options are
described below.
.SH OPTIONS
.TP
.B a
Set the attribute that specifies that a file's disk space be released when
at least one archive copy of the file exists.  Not valid with
.BR n .
.TP
.B d
Return the release attributes on the file to the default, i.e. the file space is
released according to archiver rules or as needed by the releaser.
When this option is specified, the attributes are reset to the default.
If the partial attribute is reset, all blocks are released for an 
offline regular file.
If it is used, it should be the first character in the string.
.TP
.B i
Specifies that the file's disk space be released immediately.  This will occur
if the file is currently not staging, has at least one archive copy, and has
some data in it.
.TP
.B n
Specifies that the disk space for this file never be released.  Only the
super-user can set this attribute on a file.
.TP
.B p
Set the \fIpartial\fR attribute on the file so that, when the file's disk
space is released, the first portion of that disk space will be retained.
Not valid with sam_release \fIn\fP option.
Also not valid with either of the checksum \fIg\fP (\fIgenerate\fP)
or \fIu\fP (\fIuse\fP) attributes.  (See
.BR ssum (1)
or
.BR sam_ssum (3)).

If the \fIpartial\fR attribute is set when the file is offline,
the partial blocks are not on the disk and the entire file will
be staged if accessed.  The 
.BR sam_stage 
.BR p
attribute can be used to stage the partial blocks to the disk.
.TP
.B s n
Set the \fIpartial\fP attribute on the file so that, when the file's disk
space is released, the first \fIn\fP kilobytes of that disk 
space will be retained.  Not valid with release \fB\-n\fP.
Also not valid with either of the checksum \fIgenerate\fP 
or \fIuse\fP attributes (\fBssum \-g\fP or \fBssum \-u\fP).
The minimum value is 8 kbytes and the maximum value is the \fImaxpartial\fP
value set for this file system by the mount command
(see \fB\mount_samfs (8)\fP).
.TP
NOTE: Even though only a portion of the file is retained on disk,
the amount of disk space consumed is equal to one DAU. So, for
example, if the partial size is set to 16K and the DAU size is 256K,
even though only 16K of data remains after a partial release, the actual
disk space used is 256K.
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_release(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
.I path
or
.I ops
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_release(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB EMULTIHOP
Components of \f2path\f1 require hopping to multiple
remote machines
and the file system does not allow it.
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.TP
.SB ENOTSUP
License does not support option.
.SH "SEE ALSO"
.BR release (1),
.BR ssum (1).
.PP
.BR sam_ssum (3).
