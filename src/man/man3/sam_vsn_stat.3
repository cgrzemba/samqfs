.\" $Revision: 1.18 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_vsn_stat 3 "07 Nov 2002"
.SH NAME
\fBsam_vsn_stat\fR, \fBsam_segment_vsn_stat\fR \- Gets VSN status for an archive copy that overflows VSNs
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include </opt/SUNWsamfs/include/stat.h>
.ft
.fi
.LP
.BI "int sam_vsn_stat(const char *" "path" ,
.BI "int "  "copy" ,
.BI "struct sam_section *" "buf" ,
.BI "size_t " "bufsize" );
.LP
.BI "int sam_segment_vsn_stat(const char *" "path" ,
.BI "int " "copy" ,
.BI "int " "segment_ord" ,
.BI "struct sam_section *" "buf" ,
.BI "size_t " "bufsize" );
.SH DESCRIPTION
The
.B sam_vsn_stat(\|)
function obtains information about the VSNs for the archive copy
indicated by
.IR copy
of
\fIpath\fR,
where
.IR path
points to a non-segmented file.
.PP
If
.B sam_vsn_stat(\|)
is called and
.IR path
points to a segmented file, then VSN information about the archive copy
.IR copy
of the segmented file's index inode is returned.
.PP
The
.B sam_segment_vsn_stat(\|)
function obtains information about the VSNs for the archive copy
indicated by
.IR copy
of the data segment indicated by
.IR segment_ord
of the segmented file pointed to by
.IR path .
.PP
.B sam_vsn_stat(\|)
and
.B sam_segment_vsn_stat(\|)
obtain information about the VSNs for the indicated archive copy
when the indicated archive copy uses multiple VSNs.
.PP
.B sam_vsn_stat(\|)
and
.B sam_segment_vsn_stat(\|)
fail if called to obtain VSN stat information for an archive copy
that only uses one VSN.  Use the
.B sam_stat(\|)
or
.B sam_segment_stat(\|)
subroutines to determine the number of VSNs used by a given archive
copy and to get VSN information for archive copies that only use
one VSN.
.PP
.B sam_vsn_stat(\|)
places VSN information for all of the sections that comprise the
overflowed archive copy into
.IR buf .
.PP
Read, write, or execute permission of the named file is not required,
but all directories listed in the path name leading to the file must
be searchable.
.PP
.I copy
is the archive copy number (0, 1, 2 or 3).
.PP
.I segment_ord
is the data segment number (0, ..., \fIn_segs\fR - 1)
where \fIn_segs\fR is the current number of data segments
that comprise the file pointed to by
.IR path.
.PP
.I buf
is a pointer to a
.B sam_section
structure into which VSN information is placed concerning the file's
archive copy.
.PP
.I bufsize
is the length of the user's buffer to which
.IR buf
points.
.B sam_vsn_stat
and
.B sam_segment_vsn_stat
place VSN information for each overflowed section that comprises
the archive copy into
.IR buf .
Hence, bufsize should be at least
.B sizeof(struct sam_vsn_stat) * n_vsns
bytes, where
.B n_vsns
is the number of VSNs used by the archived copy.
.PP

The contents of the structure pointed to by
.I buf
include the following
.B struct sam_section
members:
.PP
.RS
.nf
.ft 3
.ta 9n 22n
char         vsn[32];   
u_longlong_t length;
u_longlong_t position;
u_longlong_t offset;

.ft 1
.fi
.RE
.PP
.TP 10
.B vsn
The VSN of the section.
This is a null-terminated string with a maximum of 31 characters.
.TP
.B length
The length of the section on the volume.
.TP
.B position
The position of the start of the archive file that contains
this section.
.TP
.B offset
The offset of this file on the archive file.
.SH "RETURN VALUES"
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_vsn_stat(\|)
and
.B sam_segment_vsn_stat(\|)
fail if one or more of the following are true:
.TP 20
.SB EACCES
Search permission is denied for a component of the
path prefix.
.TP
.SB EFAULT
.I buf
or
.I path
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_vsn_stat(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB EMULTIHOP
Components of \f2path\f1 require hopping to multiple
remote machines
and the file system does not allow it.
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.if t .sp 1
.TP
.SB EOVERFLOW
A component is too large to store in the structure pointed to by
.IR buf .
.SH USAGE
.TP 22
.SB sam_vsn_stat
Call
.B sam_stat
to get the number of VSNs used for the archive copy.  The call to
.B sam_stat
will write the number of VSNs used by the archive copy in your
.B struct sam_stat
buffer in the member \fBcopy[copy].n_vsns\fR.  If the archive copy
uses only one VSN (the number of VSNs is 1), then your program or
script must retrieve the VSN information for the archive copy from
the copy member of the \fBsam_stat\fR structure that was filled in
when your program or script called \fBsam_stat\fR.  The copy member
of the \fBsam_stat\fR structure is of type \fBstruct sam_copy_s\fR.
.TP
.SB sam_segment_vsn_stat
Call
.B sam_stat
to determine whether the file pointed to by
.IR path
is segmented.
.TP
.SB 
If the file pointed to by
.IR path
is not segmented, then use
.B sam_vsn_stat
to obtain VSN information as detailed above.
.TP
.SB 
If the file pointed to by
.IR path
is segmented, then call
.B sam_segment_stat
to get the number of VSNs used for the archive copy indicated by
.IR copy
of the data segment indicated by
.IR segment_ord.
.TP
.SB 
The call to 
.B sam_segment_stat
will write the number of VSNs used by the archive copy of
the indicated data segment in your array of
.B sam_stat
structures in the member located in
\fBsam_stat_buff_array[segment_ord].copy[copy].n_vsns\fR.
.TP
.SB 
If the archive copy uses only one VSN (the number of VSNs is 1), then
your program or script must retrieve the  VSN information for the
archive copy from the copy member of the element in the array of
.B sam_stat
structures that was filled in when your program or script called
\fBsam_segment_stat\fR.  The copy member of the
\fBsam_stat\fR structure is of type \fBstruct sam_copy_s\fR
and is found in the array of \fBsam_stat\fR structures under
the index \fIsegment_ord\fR.
.PP
A
.B struct sam_copy_s
structure has the following members:
.PP
.RS
.nf
.ft 3
.ta 9n 22n
u_longlong_t position;
time_t       creation_time;
uint_t       offset;
ushort_t     flags;
short        n_vsns;
char         media[4];
char         vsn[32];
.ft 1
.fi
.RE
.PP
.TP 15
.B position
Location of the archive file
.TP
.B creation_time
Time that the archive copy was created
.TP
.B offset
Location of the copy in the archive file
.TP
.B flags
Sun StorEdge \%SAM-FS and Sun \%SAM-QFS archive copy status flags.  These
indicate whether the archive copy has been made, is stale,
is damaged, etc.  See
.B /opt/SUNWsamfs/include/stat.h
for bit masks which can be applied to these flags to resolve the
state and status of the archive copy.
.TP
.B n_vsns
Number of VSNs used by the archived copy.  Will be 1 in case of no
overflow, will be greater than one if the archive copy overflows
volumes.
.TP
.B media
Media type.  This is a null-terminated string with a maximum of
3 characters.
.TP
.B vsn
The VSN of the copy.
This is  a null-terminated  string with a maximum of 31 characters.
.PP
If the archive copy uses more than one VSN (the number of VSNs
is greater than 1), then your program or script must call
.B sam_vsn_stat
or
.B sam_segment_vsn_stat
to retrieve the VSN information for all of the sections that
comprise the archive copy.
.PP
Do not call
.B sam_vsn_stat
or
.B sam_segment_vsn_stat
if the archive copy uses only one VSN (does not overflow).
.SH "SEE ALSO"
.BR sam_stat (3)
.SH NOTES
The Sun StorEdge \%SAM-FS and the Sun \%SAM-QFS file systems
permit a maximum of
.B MAX_VOLUMES
sections per archive copy.  Hence, instead of dynamically
allocating a buffer of
.b sam_vsn_stat
structures, a more efficient method is to
to declare a static array with
.B MAX_VOLUMES
number of elements.
.PP
The constant
.B MAX_VOLUMES
is declared in the following include file:
.ft 3
/opt/SUNWsamfs/include/rminfo.h .
.ft
.PP
