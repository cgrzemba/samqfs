.\" $Revision: 1.16 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_ssum 3 "05 Nov 2001"
.SH NAME
sam_ssum \- Sets checksum attributes on a file
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_ssum(const char *" "path" ,
.BI "const char *" "ops" );
.SH DESCRIPTION
.B sam_ssum(\|)
sets the checksum attributes on a file using a
Sun StorEdge \%SAM-FS or Sun \%SAM-QFS system call.
.I path
is the file on which to set the attributes.
.I ops
is the character string of options, for example:  "gu".  Individual options are
described below.
.PP
If the \fIgenerate\fP (\fIg\fP)
attribute is set (\fI\-g\fP), a 128-bit value is generated when the
file is archived.  When the file is subsequently staged, the checksum is again
generated and is compared against the value generated at archive time if
the \fIuse\fP (\fI\-u\fP) attribute is set.  By default,
no checksum value is generated or used when archiving or staging a file.
.LP
The \fIgenerate\fP attribute must be set on a file
before any archive copy has been made.  Likewise, the selected algorithm cannot
be changed after an archive copy has been made.
.LP
Direct access and partial release
are not allowed on a file that has either of the checksum \fIgenerate\fP or
\fIuse\fP attributes set.  Also, it is not valid to specify that a file
never be archived as well as specify that a checksum be generated and/or used.
Therefore, when a direct access, partial release, or archive never
attribute is set on a file, attempting to set the checksum \fIgenerate\fP
or \fIuse\fP attribute on the file will result in an error and the attributes
will be unchanged.  Similarly, when either the checksum \fIgenerate\fP or
\fIuse\fP attribute is set on a file, attempting to set a direct
access, partial release, or archive never attribute on the file will result
in an error and the attributes will be unchanged.
.LP
A file that has the checksum \fIuse\fP attribute set cannot be memory mapped.
The file also must be completely staged to the disk before access is allowed
to the file's data; this means that accessing the first byte of offline
data in an archived file that
has this attribute set will be slower than accessing the
same offline file when it does not have this attribute set.
.SH OPTIONS
.TP
.B d
Return the file's checksum attributes to the default.
.TP
.B g
Generate a checksum value for the file when archiving.
.TP
.B u
Use the checksum value for the file when staging.  The \fIgenerate\fP
attribute must have been previously set, or must be set simultaneously.
.TP
.B n
\fIn\fP is an integer specifying the algorithm to use to generate the
\%128-bit checksum value.
The simple checksum algorithm provided by Sun Microsystems, Inc. is the
default if no algorithm
is specified but the \fIgenerate\fP attribute is set.  \fIn\fP may
be one of the following:
.RS 0.5i
.TP
.B 0
Use no algorithm.
.TP
.B 1
Use a simple checksum algorithm that also factors in file length.
.TP
.B 128 or higher
Site-specified algorithms.
.LP
For example, a valid options string is "gu1",
setting the \fIgenerate\fP and \fIuse\fP attributes, and specifying that
the Sun-provided simple checksum algorithm be used to generate the value.
.RE
.SH ERRORS
.PP
.B sam_ssum(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
.I path
or
.I ops
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_ssum(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.SH SEE ALSO
.BR archive (1),
.BR release (1),
.BR sls (1)
.BR ssum (1),
.BR stage (1).
.PP
.BR sam_archive (3),
.BR sam_release (3),
.BR sam_stage (3).
