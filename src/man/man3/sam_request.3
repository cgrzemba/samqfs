'\" t
.\" $Revision: 1.18 $
.ds ]W Sun Microsystems
'\" !tbl | mmdoc
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_request 3 "01 Oct 2004"
.SH NAME
sam_request \- Creates a removable media file
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -R/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/rminfo.h"
.ft
.fi
.LP
.BI "int sam_request(const char *" "path" ,
.BI "struct sam_rminfo *" "buf" ,
.BI "size_t " "bufsize" );
.SH DESCRIPTION
.B sam_request(\|)
creates a removable media file allowing access to either
tape or optical disk. The removable media file is pointed to by
.IR path .
.PP
.I buf
is a pointer to a
.B sam_rminfo(\|)
structure into which information
is placed concerning the file.
.PP
.I bufsize
is the length of the user's buffer to which
.I buf
points.  This should be equal to or greater
than \fBsizeof(struct sam_rminfo)\fR.
The maximum number of overflow VSNs is 256. The following macro
can be used to calculate the size of the \fBsam_rminfo\fR structure for
\fIn\fR VSNs.

.B #define SAM_RMINFO_SIZE(n) (sizeof(struct sam_rminfo) + 
.B         ((n) - 1) * sizeof(struct sam_section))

.PP
The contents of the structure pointed to by
.I buf
include the following members:
.PP
.nf
.ft 3
.TS
tab (%) ;
 l l l .
%%/\(** POSIX rminfo structure. \(**/
ushort_t%flags;%/\(** File mode (see mknod(2)) \(**/
char%media[4];%/\(** Media type \(**/
ulong_t%creation_time;%/\(** Creation time of removable media file \(**/
uint_t%block_size;%/\(** Block size of file in bytes \(**/
U_longlong_t%position;%/\(** Position of file on the removable media \(**/
U_longlong_t%required_size;%/\(** Required size for optical only \(**/

%%/\(** optical information only. \(**/
char%file_id[32];%/\(** File identifier \(**/
int%version;%/\(** Version number \(**/
char%owner_id[32];%/\(** Owner identifier \(**/
char%group_id[32];%/\(** Group identifier \(**/
char%info[160];%/\(** Information \(**/

%%/\(** all media information. \(**/
short%n_vsns;%/\(** Number of vsns containing file \(**/
short%c_vsn;%/\(** Current vsn ordinal -- returned \(**/
.TE
.TS
tab (%) ;
 l2 l3 l2 .
struct sam_section%section[1];%/\(** VSN array - n_vsns entries \(**/
.TE

.ft 1
.fi
.PP
.TP 10
.B flags
The access flags for the file. 

.BR RI_blockio
uses block I/O for data transfers. Each request buffer is a block
on the device.

.BR RI_bufio
uses buffered I/O for data transfers. The block size is defined by 
.BR block_size.

.BR RI_foreign
uses block I/O for data transfers. The tape is not written by Sun
\%SAM-FS or Sun \%SAM-QFS,
is barcoded, write protected, and is opened for read access only.

.TP
.B media
The left adjusted string which identifies the media type.
See \fBmcf\fR(5).
.TP
.B creation_time
Specifies the time the file was created. This value is not used on entry. 
.TP
.B block_size
The length of the block in bytes. The \fBblock_size\fR is
set in the volume labels
when the removable media is labeled. This value is returned.
.TP
.B position
This field can be set by superuser to specify an initial starting
position for the file.
.TP
.B required_size
This size in bytes may be specified. If set, this space must be
left on the removable media.
.TP
.B file_id
The file's
.SM ID.
It is written into the optical file label.
.TP
.B version
The version number of the file. It is returned.
.TP
.B owner_id
The file's owner
.SM ID.
It is written into the optical file label.
.TP
.B group_id
The file's group
.SM ID.
It is written into the optical file label.
.TP
.B info
The file's optional information field.
It is written into the optical file label by .
.TP
.B n_vsns
Specified the number of removable media cartridges containing the file.
.TP
.B c_vsn
Specifies the current removable media ordinal.
.TP
.B sam_section
Specifies the array of removable media cartridges.
The contents of the \fBsam_section\fR
structure includes the following members:
.PP
.nf
.ft 3

.TS
tab (%) ;
 l2 l2 l2 .
%%/\(** POSIX sam_section structure. \(**/
char%vsn[32];%/\(** Volume serial name \(**/
U_longlong_t%length;%/\(** Length of this section in bytes \(**/
U_longlong_t%position;%/\(** Position of this section \(**/
U_longlong_t%offset;%/\(** Byte offset of this section \(**/
.TE
.fi

.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_request(\|)
fails if one or more of the following are true:
.TP 20
.SB EACCES
Search permission is denied for a component of the
path prefix.
.TP
.SB EFAULT
.I buf
or
.I path
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_request(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB EMULTIHOP
Components of \f2path\f1 require hopping to multiple
remote machines
and the file system does not allow it.
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.if t .sp 1
.TP
.SB EOVERFLOW
A component is too large to store in the structure pointed to by
.IR buf .
.TP
.SB ENOTSUP
License does not support foreign tapes.
.SH "SEE ALSO"
.BR request (1).
.PP
.BR mcf (5).
