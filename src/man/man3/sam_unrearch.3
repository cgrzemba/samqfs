.\" $Revision: 1.4 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.\"
.TH sam_unrearch 3 "15 May 2007"
.SH NAME
sam_unrearch \- Removes rearchive attributes on a file or directory
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_unrearch(const char *" "path" ,
.BI "int"  " num_opts" ,
.B "...");
.SH DESCRIPTION
.PP
.B sam_unrearch(\|)
lets you remove a request to rearchive
a file or a directory using a Sun
StorageTek \%SAM-FS or Sun \%SAM-QFS system call.
.I path
is the file on which to remove the attributes,
followed by a sequence of
.I num_opts
input characters or options.
Individual options are described below.

For example, if you have used the \fBsam_rearch\fR(3) function
to request that a file be rearchived, you can use the \fBsam_unrearch\fR
function to clear the bit that the \fBsam_rearch\fR(3) function had set.
The specifications for the archive copy (\fBc\ \fIcopy_no\fR) and/or
the media type and VSN
.if n .br
(\%\fBm\ \fImedia_type\fR \%[\fBv\ \fIvsn\fR])
determine which archive copy is affected.
.PP
There are several ways to remove the request to rearchive from
one or more archive entries.  These ways are as follows:
.TP 3
\(bu
By copy number
.TP
\(bu
By copy number, media type, and VSN
.TP
\(bu
By copy number and media type
.TP
\(bu
By media type
.TP
\(bu
By media type and VSN
.SH OPTIONS
.TP
\fBc\fI copy_no\fR
Removes the rearchive request for \fIcopy_no\fR.
Specify \fB1\fR, \fB2\fR, \fB3\fR, or \fB4\fR for \fIcopy_no\fR.
If one or more \fB'c'\fR options are
are specified, the function removes the rearchive request from only
those archive copies (1, 2, 3, or 4).
Either a \fB"c\fI copy_no\fR" or a \fB"m\fI media\fR" option must be specified.
.TP
\fBM\fR
Removes rearchive requests for metadata only.
This includes directories, the segment index,
and removable media files.
Regular files and symbolic links are not unrearchived.
If you are unarchiving a directory, you must specify
the \%\fB"M\fR" option.
.TP
\fBm\fI media\fR
Removes rearchive requests from all
archive copies on the specified \fImedia_type\fR.
For the list of possible \fImedia_type\fR specifications, see the
\fBmcf\fR(5) man page.
Either a \%\fB"c\fI copy_no\fR" or a \%\fB"m\fI media\fR" option must be specified.
If you specify a \%\fB"m\fI media\fR" option, you can also specify
a \%\fB"v\fI vsn\fR" option.
.TP
\fBv\fI vsn\fR
Removes the rearchive requests for the archive copies on \fIvsn\fR.
For \fIvsn\fR, specify a volume serial name (VSN).
If you specify a \%\fB"v\fI vsn\fR" option, you must also specify
a \%\fB"m\fI media\fR" option.
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_unrearch(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
Argument points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_unrearch(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.SH "SEE ALSO"
.BR unrearch(1m),
.BR rearch(1m),
.BR sam_rearch(3),
.BR mcf(5)
