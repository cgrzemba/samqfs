.\" $Revision: 1.4 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.\"
.TH sam_undamage 3 "15 May 2007"
.SH NAME
sam_undamage \- Clears damaged and stale status of archive entries of
a file or directory
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/lib.h"
.ft
.fi
.LP
.BI "int sam_undamage(const char *" "path" ,
.BI "int"  " num_opts" ,
.B "...");
.SH DESCRIPTION
.PP
Using a Sun StorageTek \%SAM-FS or Sun \%SAM-QFS system call,
.B sam_undamage(\|)
lets you mark archive copies of a file or a directory as undamaged
and not stale, based on the archive copy number and/or the media type and VSN specified. The function also marks the file itself as undamaged.
.I path
is the file on which to clear the attributes,
followed by a sequence of
.I num_opts
input characters or options.
Individual options are described below.
.PP
There are several ways to mark one or more copies as undamaged and unstale.
These ways are as follows:
.TP 3
\(bu
By copy number
.TP
\(bu
By copy number, media type, and VSN
.TP
\(bu
By copy number and media type
.TP
\(bu
By media type
.TP
\(bu
By media type and VSN
.SH OPTIONS
.TP 10
\%\fBa\fR
Rearchives the damaged copy.
.TP
\fBc\fI copy_no\fR
Marks the specified archive copy number as undamaged.
If one or more \fB'c'\fR options are
specified, only those archive copies (1, 2, 3, or 4)
are marked as undamaged.
Specify \fB1\fR, \fB2\fR, \fB3\fR, or \fB4\fR for \fIcopy_no\fR.
Either a \fB"c\fI copy_no\fR" or a \fB"m\fI media\fR" option must be specified.
.TP
\fBM\fR
Marks only metadata as undamaged.
This includes directories, the segment index and \%removable-media files.
Regular files are not marked as undamaged.
If you are marking a directory as undamaged, you must specify
the \%\fB"M\fR" option.
.TP
\%\fBm\ \fImedia_type\fR
Marks all copies from the specified \fImedia_type\fR as undamaged.
For the list of possible \fImedia_type\fR specifications, see the
\fBmcf\fR(5) man page.
Either a \%\fB"c\fI copy_no\fR" or a \%\fB"m\fI media\fR" option must be specified.
If you specify a \%\fB"m\fI media\fR" option, you can also specify
a \%\fB"v\fI vsn\fR" option.
.TP
\fBv\fI vsn\fR
Marks the archive copies on \fIvsn\fR as undamaged.
For \fIvsn\fR, specify a volume serial name (VSN).
If you specify a \%\fB"v\fI vsn\fR" option, you must also specify
a \%\fB"m\fI media\fR" option.
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_undamage(\|)
fails if one or more of the following are true:
.TP 20
.SB EINVAL
An invalid option was specified, or the file is neither a regular file nor a
directory.
.TP
.SB EPERM
Not the owner or super-user.
.TP
.SB EFAULT
Argument points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_undamage(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.SH "SEE ALSO"
.BR damage(1m),
.BR undamage(1m),
.BR sam_damage(3),
.BR mcf(5)
