.\" $Revision: 1.16 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH sam_readrminfo 3 "05 Nov 2001"
.SH NAME
sam_readrminfo \- Gets removable media file status
.SH SYNOPSIS
.LP
.BI "cc [ " "flag"
.BI " ... ] " "file"
.BI " ... -L/opt/SUNWsamfs/lib -R/opt/SUNWsamfs/lib -lsam [ " "library" " ... ]"
.LP
.nf
.ft 3
#include "/opt/SUNWsamfs/include/rminfo.h"
.ft
.fi
.LP
.BI "int sam_readrminfo(const char *" "path" ,
.BI "struct sam_rminfo *" "buf" ,
.BI "size_t " "bufsize" );
.SH DESCRIPTION
.B sam_readrminfo(\|)
returns information about a removable media file.
The removable media file is pointed to by
.IR path .
.PP
.I buf
is a pointer to a
.B sam_rminfo(\|)
structure into which information
is placed concerning the file.
.PP
.I bufsize
is the length of the user's buffer to which
.I buf
points.  This should be equal to or greater
than \fBsizeof(struct sam_rminfo)\fR.
The maximum number of overflow VSNs is 256. The following macro
can be used to calculate the size of the \fBsam_rminfo\fR structure for
\fIn\fR VSNs.

.B #define SAM_RMINFO_SIZE(n) (sizeof(struct sam_rminfo) + 
.B         ((n) - 1) * sizeof(struct sam_section))

.PP
The contents of the structure pointed to by
.I buf
is documented in sam_request(3).
.SH "RETURN VALUES"
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH ERRORS
.PP
.B sam_readrminfo(\|)
fails if one or more of the following are true:
.TP 20
.SB EACCES
Search permission is denied for a component of the
path prefix.
.TP
.SB EFAULT
.I buf
or
.I path
points to an illegal address.
.TP
.SB EINTR
A signal was caught during the
.B sam_readrminfo(\|)
function.
.TP
.SB ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.SB EMULTIHOP
Components of \f2path\f1 require hopping to multiple
remote machines
and the file system does not allow it.
.TP
.SB ENAMETOOLONG
The length of the
.I path
argument exceeds {\f4PATH_MAX\f1}, or the
length of a \f2path\f1 component exceeds {\f4NAME_MAX\f1} while
{\f4_POSIX_NO_TRUNC\f1} is in effect.
.TP
.SB ENOENT
The named file does not exist or is the null pathname.
.TP
.SB ENOLINK
.I path
points to a remote machine and the link
to that machine is no longer active.
.TP
.SB ENOTDIR
A component of the path prefix is not a directory.
.if t .sp 1
.TP
.SB EOVERFLOW
A component is too large to store in the structure pointed to by
.IR buf .
.SH "SEE ALSO"
.BR sam_request (3)
