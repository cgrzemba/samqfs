.\" $Revision: 1.17 $
.ds ]W Sun Microsystems
.\" SAM-QFS_notice_begin
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
.\" or https://illumos.org/license/CDDL.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at pkg/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" SAM-QFS_notice_end
.TH genfile 1 "08 Mar 2004"
.SH NAME
genfile \- generate files of random data
.SH SYNOPSIS
.B genfile
.RB [ \-D ]
.RB [ \-R ]
.RB [ \-S
.IR seed ]
.RB [ \-c ]
.RB [ \-d
.IR dirname ]
.RB [ \-f ]
.RB [ \-g ]
.RB [ \-s
.IR minsize [ \-maxsize ]]
.RB [ \-v ]
.IR filename .\|.\|.\|
.SH AVAILABILITY
.LP
SUNWsamtp
.SH DESCRIPTION
.B genfile
generates and checks files of random data.  The files consist of records of
2113 random integers.  The record also includes the name of the file and
the record number.  In addition, a file header is written before the
data records.  The header contains the file name, the status of the file
.RB ( stat (2)),
the random number seed and the data length.  This format allows the file
data to be checked later knowing only the file name.
.LP
The file is written using a buffer size of 41 records.  Using 41 and 2113
(which are prime numbers), avoids performing I/O in integer multiples of
sector and block sizes.
.LP
File names may be generated by using the regular expression "range"
construction [x-y].  When such a filename argument is used, each range
construction, from right to left, is successively incremented.
.LP
For example, the file name
.I "file[A-C][0-9]"
generates the file names
.B fileA0
through
.BR fileC9 .
.LP
Note, you need to "shell escape" the range constructions.
.LP
If one of the files to be generated already exists, that file name is skipped.
.SH OPTIONS
.TP
.B \-D
Set "directio" on the file.
.TP
.B \-R
Allow rewriting of an existing file.
.TP
.BI \-S seed
Set the random number seed.
.TP
.B \-c
Read and check files.
.TP
.BI \-d dirname
Use
.I dirname
as a prefix to the file names.
.TP
.B \-f
Do not report errors. 
.TP
.B \-g
Generate files.  This is the default action.
.TP
.BI \-s size
Generate file with data of length
.IR size .
The actual length of the file will be
.I size
plus the length of the file header (168 bytes on SPARC, 156 on x86) and
the length of the file name plus one and rounded up to the next multiple
of four.
For example if 
.I size 
is specified as 10 and the file name is /var/file2, the actual length of the
file would be 190 bytes on a SPARC platform and 178 bytes on an x86 platform.
.TP
.BI \-s "minsize-maxsize"
Generate files with a random data length between
.I minsize
and
.IR maxsize .
The actual file length includes the header and file name lengths as above.
.TP
.B \-v
Verbose output.
