#!/bin/ksh
#
#    SAM-QFS_notice_begin
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
# or https://illumos.org/license/CDDL.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at pkg/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#    SAM-QFS_notice_end
#
# ident	$Id: fsmgr,v 1.14 2008/12/16 00:12:29 am143972 Exp $
#
# fsmgr:
# It is used to set the trace level of the SAM-QFS Manager.
#
#
# Accepts trace
# Exits with a value 1 on error
#
#
# trace {level} set trace level of SAM-QFS Manager
#
#
# Get Solaris major revision.
#
RELEASE=`grep Solaris /etc/release`

# for SAM-QFS Manager smcwebserver
USR_SBIN_DIR=/usr/sbin
SMREG=${USR_SBIN_DIR}/smreg
WCADMIN=${USR_SBIN_DIR}/wcadmin
SMCWEBSERVER=${USR_SBIN_DIR}/smcwebserver
PACKAGE_PATH=com.sun.netstorage.samqfs.web
SMCLOG_DIR=/var/log/webconsole/console
SMCPID_FILE=/var/run/smcwebserver.pid
PKGINFO="/usr/bin/pkginfo"
ECHO="/usr/bin/echo"
TIMEOUT=
REPLY=
IS_START=1


# ---------------------
#	FUNCTIONS
# ---------------------
#
# Usage
#
# Depending upon which pkgs are installated, show appropriate usage
#
usage() {

	pkg_exists SUNWfsmgru
	samfsui_exists=$?

	if [ $samfsui_exists == 0 ]; then

		$ECHO "Usage: fsmgr sub-command [option]"

		usage_detail_samfsui

	else
		# should never arise, how did fsmgr get here without pkg?
		# may be incomplete pkg removal
		ECHO "Package not completely installed"
		exit 1
	fi

	$ECHO

	exit 1
}


#
# Usage details if SUNWfsmgrr/u is installed
#
usage_detail_samfsui() {

	$ECHO
	#
	$ECHO "Sub-command:"
	$ECHO
	$ECHO "trace {level}\tTrace SAM-QFS Manager execution"
	$ECHO
	$ECHO "\t1\tTrace important messages only"
	$ECHO "\t2\tTrace moderately important message, include"
	$ECHO "\t\tmessages in trace level 1"
	$ECHO "\t3\tTrace all messages"
	$ECHO "\toff\tTurn off tracing"
	$ECHO
	$ECHO "\tIf no options are given, display current trace level"
	$ECHO "\tTrace messages are sent by syslogd(1M) to facility local6.debug"
	$ECHO
	$ECHO "session {timeout_value_in_minutes}\tSun Java Web Console Session Timeout Value"
	$ECHO
	$ECHO "\t{timeout_value_in_minutes} has to be an integer greater than"
	$ECHO "\tor equals to 10"
	$ECHO
        $ECHO "connection {enable|disable}\tEnable external connection to the Java Web Console"
        $ECHO

}

#
# Check if user is a superuser.
#
check_su()
{
	id=`/bin/id | awk -F"(" '{print $1}' | awk -F"=" '{print $2}'`

	if [ "${id}" != "0" ]; then
            (echo "Root privilege is required to run \c"
             echo "this installer.")
            exit 1
	fi
}


#
# Checks if package is installed
# INPUT	: package name
# RETURN: 0 if package exits, else 1
#
pkg_exists() {

	$PKGINFO $1 >> /dev/null 2>&1

	return $?		# return 0 if package exists, else 1

}


#
# Set the trace level to the given level
# INPUT: level
#
set_trace_level() {

	## Set the correct LOGGING directory
	LH_VERSION_STRING=`${SMCWEBSERVER} -V`
	LH_VERSION=`/usr/bin/echo ${LH_VERSION_STRING} | cut -d" " -f2 | cut -d"." -f1`

	if [ ${LH_VERSION} -eq 2 ]; then
		SMCLOG_DIR=/var/log/webconsole
	else
		SMCLOG_DIR=/var/log/webconsole/console
	fi

	$ECHO "Setting trace level to $1"
	${SMREG} add --properties ${PACKAGE_PATH}.tracelevel=$1

}


#
# Turn off tracing
#
set_trace_off() {

	$ECHO "Turning off tracing"
	${SMREG} remove --properties ${PACKAGE_PATH}.tracelevel

}

#
# Display the current trace level
#
show_current_level() {

	# show current tracing level
	tracelevel=`/usr/sbin/smreg list |grep com.sun.netstorage.samqfs.web.tracelevel | awk -F=  '{print $2}'`

	if [ -z $tracelevel ]; then
		echo "Current Trace Level: off"
	else
		echo "Current Trace Level: $tracelevel"
	fi
}

#
# Show current session timeout value
#
show_current_session_timeout_value() {

    timeout=`${SMREG} list -p |grep session.timeout.value | cut -d"=" -f2`
    echo "Current session timeout value is set to ${timeout} minutes"
}

#
# Show current connection value
#
show_current_connection_value() {
    connection=`/usr/bin/svcprop -C -p options/tcp_listen system/webconsole`
    echo "External connections to the Java Web Console (system/webconsole:console) is set to ${connection}"
}

#
# Change session timeout to specific value
#
set_timeout() {

    # check if webserver is running
    # if yes, the script will first prompt the user because the webserver
    # needs to be stopped

    is_running=`${SMCWEBSERVER} status -p | cut -d"=" -f2`
    if [ ${is_running} = "yes" ]; then
        $ECHO "The Java Web Console is currently running."
        P="Are you sure you want to stop the console in order to"
        P="${P} config the session timeout value?"
        REPLY=`/bin/ckyorn -Q -d "no" -p "${P}"`

        if [ "${REPLY}" = "y" -o "${REPLY}" = "yes" -o \
             "${REPLY}" = "Y" -o "${REPLY}" = "YES" ]; then
            ${SMCWEBSERVER} stop
            set_timeout_value
        else
            echo "Setup exiting - no changes have been made to your system."
        fi
    else
        IS_START=0
        set_timeout_value
    fi
}

set_timeout_value() {
    $ECHO "Setting session timeout value to ${TIMEOUT} minutes..."
    LH_VERSION_STRING=`${SMCWEBSERVER} -V`
    LH_VERSION=`/usr/bin/echo ${LH_VERSION_STRING} | cut -d" " -f2 | cut -d"." -f1`

    if [ ${LH_VERSION} -gt 2 ]; then
        ${WCADMIN} add -p -a console session.timeout.value=${TIMEOUT}
    else
        ${SMREG} add -p -c session.timeout.value=${TIMEOUT}
    fi

    if [ ${IS_START} -eq 1 ]; then
	${SMCWEBSERVER} start
    fi
}

set_connection() {
    is_running=`${SMCWEBSERVER} status -p | cut -d"=" -f2`
    connection=`/usr/bin/svcprop -C -p options/tcp_listen system/webconsole`
    need_restart=0

    if [ $1 = "enable" ]; then
        if [ ${connection} = "true" ]; then
            echo "External connections to the Java Web Console is already enabled"
        else
            if [ ${is_running} = "yes" ]; then
                ${SMCWEBSERVER} stop
            fi

            /usr/sbin/svccfg -s system/webconsole setprop options/tcp_listen = \
              true
            need_restart=1
        fi
    else
        if [ ${connection} = "false" ]; then
            echo "External connections to the Java Web Console is already disabled"
        else
            if [ ${is_running} = "yes" ]; then
                ${SMCWEBSERVER} stop
            fi

            /usr/sbin/svccfg -s system/webconsole setprop options/tcp_listen = \
              false
            need_restart=1
        fi
    fi

    if [ ${need_restart} -eq 1 ]; then
        ${SMCWEBSERVER} start
    fi
}

# ----------------------------------
#	MAIN PROGRAM EXECUTION
# ----------------------------------

$ECHO	# first blank line

#
# with subcommand 'trace', if options are given the trace is set to the desired
# if no options are given, just display the current trace setting
#

check_su

if [ $# -gt 0 ]; then
	if [ "$1" = "trace" ]; then
		if [ $# != 1 -a $# != 2 ]; then
			usage
		fi
	elif [ "$1" = "session" ]; then
		if [ $# != 1 -a $# != 2 ]; then
			usage
		fi
        elif  [ "$1" = "connection" ]; then
                if [ $# != 1 -a $# != 2 ]; then
                        usage
                fi
	else 
		usage
	fi

else
	# arg count = 0
	usage
fi


case "$1" in
#####################################################
#	SAM-QFS Manager (client side tracing)   #
#####################################################
'trace')

	if [ $# == 1 ]; then
		show_current_level
		$ECHO
		exit 0
	fi

	case $2 in
	'off')	set_trace_off
		;;
	[1-3])	set_trace_level $2
		;;
	*)	$ECHO "Invalid trace level value"
		$ECHO
		usage
		;;
	esac
	;;

###################################################
#       Sun Web Console Session Timeout Config    #
###################################################
'session')

        if [ $# == 1 ]; then
		show_current_session_timeout_value
		$ECHO
		exit 0
	fi

	case $2 in
	@([1-9])[0-9]*([0-9]) )	TIMEOUT=$2
				set_timeout $2
			;;
	*)		$ECHO "Invalid session timeout value.  Value has to be an integer that is greater than or equal to 10"
			$ECHO
			usage
			;;
	esac
			;;

##################################################
#  Enable/Disable connection to Java Web Console #
##################################################
'connection')

        if [ $# == 1 ]; then
                show_current_connection_value
                $ECHO
                exit 0
        fi

        case $2 in
        'enable')   set_connection $2
                    ;;
        'disable')  set_connection $2
                    ;;
        *)          $ECHO "Invalid connection value entered"
                    $ECHO
                    usage
                    ;;
        esac
        ;;

*)
        usage
        ;;

esac
exit 0
