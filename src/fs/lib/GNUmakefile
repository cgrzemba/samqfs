# $Revision: 1.19 $

#    SAM-QFS_notice_begin
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
# or https://illumos.org/license/CDDL.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at pkg/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#    SAM-QFS_notice_end

DEPTH = ../../..

include $(DEPTH)/mk/common.mk

BUILD_64BIT = yes

LIB = fscmd
LIB_SRC = \
	bswap.c \
	common_subr.c \
	extent.c \
	mount.c \
	readhost.c \
	setdau.c \
	standalone.c

ifeq ($(OS), SunOS)
LIB_SRC += \
	disk_mgmt.c \
	sblk_mgmt.c \
	utility.c \
	efilabel.c
endif

ifeq ($(OS), Linux)
INCFLAGS = $(OSFLAGS) -I$(LINUX_INCLUDE) -I../include -I$(INCLUDE) $(DEBUGCDEFS)
else
INCFLAGS = $(OSFLAGS) -I../include -I$(INCLUDE) $(DEBUGCDEFS)
endif
DEPCFLAGS = -I../include/$(OBJ_DIR) $(INCFLAGS) $(VERS) $(METADATA_SERVER)
ifeq ($(SPARCV9), yes)
DEPCFLAGS += -DSPARCV9_BUILD
endif
ifeq ($(AMD64), yes)
DEPCFLAGS += -DAMD64_BUILD
endif
DEPCFLAGS += $(OSDEPCFLAGS)

LNOPTS =  -munsx -Dlint
LNLIBS =

ifeq ($(OS), Linux)
LD=/usr/bin/ld
endif
include $(DEPTH)/mk/targets.mk

.INIT:	compare

all:	$(OBJ_DIR)/setsyscall.o

clobberall:		clobber_more
clobber_more:
	rm -f $(OBJ_DIR)/decls.c

LNSRC += setsyscall.c
lint:	structlint

structlint:

# bswap_data.c -- generated by running ./struct -s and prepending
# the copyright notices, CVS Id, &c.  Each structure element is an
# offset, a size, and a count of objects (of that size, starting
# at that offset) to be byte-swapped.  bswap_data.c is included
# by bswap.c; bswap.c is also included in src/fs/samfs/clmisc.c.
#
# struct -- generated from struct.c and decls.c.  Munges the
# collections of offsets and sizes defined in decls.c, and generates
# the offset/size/count triplets required for byte-swapping the
# structures of interest (sblks, hosts files, label blocks, ...).
# It complains about overlapping elements discovered in structures,
# and joins adjacent same-sized descriptor elements.
#
# decls.c -- generated by perl script and cc -E from desc.c,
# declares print/swap info for all structures of interest.
# Included by struct.c.
#
# desc.c -- Holds #includes for slurping in required structure
# structure definitions for gendesc.p to process.  Not compiled
# to binary (used only w/ cc -E), gendesc.p generates decls.c
# from it.
#
# data: dummy target to regenerate bswap_data.c, whose contents
# ultimately derive from various structures/include files in
# src/fs/include.  Save the old bswap_data.c away.
#
# compare: dummy target to compare bswap_data.c (which is kept
# in the source tree) to a generated version of the same.
# If they don't compare, we want the compile to blow up so
# that someone will have to check in an updated bswap_data.c.
# (Because this is generated for different machines and must
# be identical on all of them, we must not just generate
# bswap_data.c on the fly for each.)
#

bswap.o:	bswap_data.c

data:	$(OBJ_DIR)/struct $(OBJ_DIR)/decls.c
	sed -e '1,/START_DATA/p' -e '1,$$d' bswap_data.c > data
	./$(OBJ_DIR)/struct -s >> data
	mv bswap_data.c bswap_data.c@`date '+%Y.%m.%d-%H:%M:%S'`
	mv data bswap_data.c

compare:	$(OBJ_DIR)/struct
	@if (sed -e '1,/START_DATA/p' -e '1,$$d' bswap_data.c; ./$(OBJ_DIR)/struct -s) | diff bswap_data.c -; \
	then		\
		echo bswap_data.c up-to-date; \
	else		\
		echo;	\
		echo "--> src/fs/lib/bswap_data.c is out-of-date and needs to"; \
		echo "--> be regenerated before the tree can be built.  chdir"; \
		echo "--> to src/fs/lib, run 'gmake data', then cd to top-of-tree,"; \
		echo "--> then re-run gmake clean and gmake."; \
		echo;	\
		exit 1;	\
	fi

$(OBJ_DIR)/decls.c: desc.c types.define types.swap gendesc.p \
		../../../include/sam/types.h ../../../include/sam/param.h \
		../include/ino.h ../include/sblk.h ../include/share.h \
		../include/samhost.h
	rm -f $(OBJ_DIR)/decls.c
	$(CC) $(INCFLAGS) -DBYTE_SWAP -E -P $(CERRWARN) desc.c | $(PERL) -w gendesc.p > $(OBJ_DIR)/decls.c
	chmod 444 $(OBJ_DIR)/decls.c

$(OBJ_DIR)/struct.o:	$(OBJ_DIR)/decls.c
	$(CC) $(OSDEPCFLAGS) $(INCFLAGS) -I$(OBJ_DIR) -c -o $(OBJ_DIR)/struct.o struct.c

$(OBJ_DIR)/struct:		$(OBJ_DIR)/struct.o
	$(CC) $(INCFLAGS) $(OBJ_DIR)/struct.o -o $(OBJ_DIR)/struct

include $(DEPTH)/mk/depend.mk
