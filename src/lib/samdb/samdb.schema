# $Revision: 1.2 $

#    SAM-QFS_notice_begin
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at pkg/OPENSOLARIS.LICENSE
# or https://illumos.org/license/CDDL.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at pkg/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#    SAM-QFS_notice_end
CREATE TABLE IF NOT EXISTS sam_inode (
	ino		INT UNSIGNED NOT NULL,
	gen		INT UNSIGNED NOT NULL,
	type		TINYINT UNSIGNED NOT NULL,
	size		BIGINT UNSIGNED DEFAULT 0,
	csum		CHAR(32),
	create_time	INT UNSIGNED DEFAULT 0,
	modify_time	INT UNSIGNED DEFAULT 0,
	uid		INT UNSIGNED NOT NULL,
	gid		INT UNSIGNED NOT NULL,
	online		TINYINT UNSIGNED NOT NULL,
	PRIMARY KEY (ino, gen))
COMMENT 'SAM inode entry table';
# Root inode
INSERT IGNORE INTO sam_inode VALUES (2,2,1,0,NULL,0,0,0,0,1);

# One entry for each directory.  Describes the path of the directory.
CREATE TABLE IF NOT EXISTS sam_path (
	ino		INT UNSIGNED NOT NULL,
	gen		INT UNSIGNED NOT NULL,
	path		VARCHAR(4096),
	PRIMARY KEY (ino, gen),
	INDEX (path))
COMMENT 'SAM path table - eliminates path data redundancy';
# Root path
INSERT IGNORE INTO sam_path VALUES (2,2,'/');

# One entry for each file.  Multiple files with identical
# ino/gen represents an inode with multiple hard links.
CREATE TABLE IF NOT EXISTS sam_file (
	p_ino		INT UNSIGNED NOT NULL,
	p_gen		INT UNSIGNED NOT NULL,
	name_hash	SMALLINT UNSIGNED NOT NULL,
	name		VARCHAR(256) NOT NULL,
	ino		INT UNSIGNED NOT NULL,
	gen		INT UNSIGNED NOT NULL,
	PRIMARY KEY (p_ino, p_gen, name_hash, name),
	INDEX (ino, gen))
COMMENT 'SAM file table';

# One sam_archive entry for each archive copy of a given ino/gen.
CREATE TABLE IF NOT EXISTS sam_archive (
	ino		INT UNSIGNED NOT NULL,
	gen		INT UNSIGNED NOT NULL,
	copy		TINYINT UNSIGNED NOT NULL,
	seq		SMALLINT UNSIGNED NOT NULL,
	media_type	CHAR(4) NOT NULL,
	vsn		CHAR(32) NOT NULL,
	position	BIGINT UNSIGNED NOT NULL,
	offset		INT UNSIGNED NOT NULL,
	size		BIGINT UNSIGNED NOT NULL,
	create_time	INT UNSIGNED DEFAULT 0,
	stale		TINYINT UNSIGNED DEFAULT 0,
	PRIMARY KEY (ino, gen, copy, seq),
	INDEX (media_type, vsn))
COMMENT 'SAM archive entry table';

# Version information for future upgrade paths
CREATE TABLE IF NOT EXISTS sam_version (
	id		INT UNSIGNED NOT NULL,
	version		DOUBLE NOT NULL) 
COMMENT 'SAM version table';
INSERT IGNORE INTO sam_version VALUES (0, 1.0);
